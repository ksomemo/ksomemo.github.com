{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n",
      "                                 Dload  Upload   Total   Spent    Left  Speed\n",
      "100 54792  100 54792    0     0  98359      0 --:--:-- --:--:-- --:--:--  382k\n"
     ]
    }
   ],
   "source": [
    "!curl -Lo kaiki-bunseki.zip ftp://ftp2.ohmsha.co.jp/link/4-274-06614-2/kaiki-bunseki.zip"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "!open ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data-Kaiki-kaitou.xls  Data-Kaiki.xls  重回帰分析における予測区間.pdf\r\n"
     ]
    }
   ],
   "source": [
    "!ls kaiki-bunseki/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import io\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>最高気温(x)</th>\n",
       "      <th>アイスティーの注文数(y)</th>\n",
       "      <th>day</th>\n",
       "      <th>week</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>29</td>\n",
       "      <td>77</td>\n",
       "      <td>22</td>\n",
       "      <td>月</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>28</td>\n",
       "      <td>62</td>\n",
       "      <td>23</td>\n",
       "      <td>火</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>34</td>\n",
       "      <td>93</td>\n",
       "      <td>24</td>\n",
       "      <td>水</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>31</td>\n",
       "      <td>84</td>\n",
       "      <td>25</td>\n",
       "      <td>木</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>25</td>\n",
       "      <td>59</td>\n",
       "      <td>26</td>\n",
       "      <td>金</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>29</td>\n",
       "      <td>64</td>\n",
       "      <td>27</td>\n",
       "      <td>土</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>32</td>\n",
       "      <td>80</td>\n",
       "      <td>28</td>\n",
       "      <td>日</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>31</td>\n",
       "      <td>75</td>\n",
       "      <td>29</td>\n",
       "      <td>月</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>24</td>\n",
       "      <td>58</td>\n",
       "      <td>30</td>\n",
       "      <td>火</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>33</td>\n",
       "      <td>91</td>\n",
       "      <td>31</td>\n",
       "      <td>水</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>25</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>木</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>31</td>\n",
       "      <td>73</td>\n",
       "      <td>2</td>\n",
       "      <td>金</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>26</td>\n",
       "      <td>65</td>\n",
       "      <td>3</td>\n",
       "      <td>土</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>30</td>\n",
       "      <td>84</td>\n",
       "      <td>4</td>\n",
       "      <td>日</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    最高気温(x)  アイスティーの注文数(y)  day week\n",
       "0        29             77   22    月\n",
       "1        28             62   23    火\n",
       "2        34             93   24    水\n",
       "3        31             84   25    木\n",
       "4        25             59   26    金\n",
       "5        29             64   27    土\n",
       "6        32             80   28    日\n",
       "7        31             75   29    月\n",
       "8        24             58   30    火\n",
       "9        33             91   31    水\n",
       "10       25             51    1    木\n",
       "11       31             73    2    金\n",
       "12       26             65    3    土\n",
       "13       30             84    4    日"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 単回帰\n",
    "data = \"\"\"最高気温(x),アイスティーの注文数(y)\n",
    "29,77\n",
    "28,62\n",
    "34,93\n",
    "31,84\n",
    "25,59\n",
    "29,64\n",
    "32,80\n",
    "31,75\n",
    "24,58\n",
    "33,91\n",
    "25,51\n",
    "31,73\n",
    "26,65\n",
    "30,84\n",
    "\"\"\"\n",
    "df_reg = pd.read_csv(io.StringIO(data))\n",
    "df_reg[\"day\"] = [i for i in range(22, 31+1)] + [1,2,3,4]\n",
    "df_reg[\"week\"] = list(\"月火水木金土日\") * 2\n",
    "df_reg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>最高気温(x)</th>\n",
       "      <th>アイスティーの注文数(y)</th>\n",
       "      <th>day</th>\n",
       "      <th>week</th>\n",
       "      <th>x - x_m</th>\n",
       "      <th>y - y_m</th>\n",
       "      <th>(x - x_m)^2</th>\n",
       "      <th>(y - y_m)^2</th>\n",
       "      <th>(x - x_m)(y - y_m)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>29</td>\n",
       "      <td>77</td>\n",
       "      <td>22</td>\n",
       "      <td>月</td>\n",
       "      <td>-0.142857</td>\n",
       "      <td>4.428571</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>19.612245</td>\n",
       "      <td>-0.632653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>28</td>\n",
       "      <td>62</td>\n",
       "      <td>23</td>\n",
       "      <td>火</td>\n",
       "      <td>-1.142857</td>\n",
       "      <td>-10.571429</td>\n",
       "      <td>1.306122</td>\n",
       "      <td>111.755102</td>\n",
       "      <td>12.081633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>34</td>\n",
       "      <td>93</td>\n",
       "      <td>24</td>\n",
       "      <td>水</td>\n",
       "      <td>4.857143</td>\n",
       "      <td>20.428571</td>\n",
       "      <td>23.591837</td>\n",
       "      <td>417.326531</td>\n",
       "      <td>99.224490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>31</td>\n",
       "      <td>84</td>\n",
       "      <td>25</td>\n",
       "      <td>木</td>\n",
       "      <td>1.857143</td>\n",
       "      <td>11.428571</td>\n",
       "      <td>3.448980</td>\n",
       "      <td>130.612245</td>\n",
       "      <td>21.224490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>25</td>\n",
       "      <td>59</td>\n",
       "      <td>26</td>\n",
       "      <td>金</td>\n",
       "      <td>-4.142857</td>\n",
       "      <td>-13.571429</td>\n",
       "      <td>17.163265</td>\n",
       "      <td>184.183673</td>\n",
       "      <td>56.224490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>29</td>\n",
       "      <td>64</td>\n",
       "      <td>27</td>\n",
       "      <td>土</td>\n",
       "      <td>-0.142857</td>\n",
       "      <td>-8.571429</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>73.469388</td>\n",
       "      <td>1.224490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>32</td>\n",
       "      <td>80</td>\n",
       "      <td>28</td>\n",
       "      <td>日</td>\n",
       "      <td>2.857143</td>\n",
       "      <td>7.428571</td>\n",
       "      <td>8.163265</td>\n",
       "      <td>55.183673</td>\n",
       "      <td>21.224490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>31</td>\n",
       "      <td>75</td>\n",
       "      <td>29</td>\n",
       "      <td>月</td>\n",
       "      <td>1.857143</td>\n",
       "      <td>2.428571</td>\n",
       "      <td>3.448980</td>\n",
       "      <td>5.897959</td>\n",
       "      <td>4.510204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>24</td>\n",
       "      <td>58</td>\n",
       "      <td>30</td>\n",
       "      <td>火</td>\n",
       "      <td>-5.142857</td>\n",
       "      <td>-14.571429</td>\n",
       "      <td>26.448980</td>\n",
       "      <td>212.326531</td>\n",
       "      <td>74.938776</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>33</td>\n",
       "      <td>91</td>\n",
       "      <td>31</td>\n",
       "      <td>水</td>\n",
       "      <td>3.857143</td>\n",
       "      <td>18.428571</td>\n",
       "      <td>14.877551</td>\n",
       "      <td>339.612245</td>\n",
       "      <td>71.081633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>25</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>木</td>\n",
       "      <td>-4.142857</td>\n",
       "      <td>-21.571429</td>\n",
       "      <td>17.163265</td>\n",
       "      <td>465.326531</td>\n",
       "      <td>89.367347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>31</td>\n",
       "      <td>73</td>\n",
       "      <td>2</td>\n",
       "      <td>金</td>\n",
       "      <td>1.857143</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>3.448980</td>\n",
       "      <td>0.183673</td>\n",
       "      <td>0.795918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>26</td>\n",
       "      <td>65</td>\n",
       "      <td>3</td>\n",
       "      <td>土</td>\n",
       "      <td>-3.142857</td>\n",
       "      <td>-7.571429</td>\n",
       "      <td>9.877551</td>\n",
       "      <td>57.326531</td>\n",
       "      <td>23.795918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>30</td>\n",
       "      <td>84</td>\n",
       "      <td>4</td>\n",
       "      <td>日</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>11.428571</td>\n",
       "      <td>0.734694</td>\n",
       "      <td>130.612245</td>\n",
       "      <td>9.795918</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    最高気温(x)  アイスティーの注文数(y)  day week   x - x_m    y - y_m  (x - x_m)^2  \\\n",
       "0        29             77   22    月 -0.142857   4.428571     0.020408   \n",
       "1        28             62   23    火 -1.142857 -10.571429     1.306122   \n",
       "2        34             93   24    水  4.857143  20.428571    23.591837   \n",
       "3        31             84   25    木  1.857143  11.428571     3.448980   \n",
       "4        25             59   26    金 -4.142857 -13.571429    17.163265   \n",
       "5        29             64   27    土 -0.142857  -8.571429     0.020408   \n",
       "6        32             80   28    日  2.857143   7.428571     8.163265   \n",
       "7        31             75   29    月  1.857143   2.428571     3.448980   \n",
       "8        24             58   30    火 -5.142857 -14.571429    26.448980   \n",
       "9        33             91   31    水  3.857143  18.428571    14.877551   \n",
       "10       25             51    1    木 -4.142857 -21.571429    17.163265   \n",
       "11       31             73    2    金  1.857143   0.428571     3.448980   \n",
       "12       26             65    3    土 -3.142857  -7.571429     9.877551   \n",
       "13       30             84    4    日  0.857143  11.428571     0.734694   \n",
       "\n",
       "    (y - y_m)^2  (x - x_m)(y - y_m)  \n",
       "0     19.612245           -0.632653  \n",
       "1    111.755102           12.081633  \n",
       "2    417.326531           99.224490  \n",
       "3    130.612245           21.224490  \n",
       "4    184.183673           56.224490  \n",
       "5     73.469388            1.224490  \n",
       "6     55.183673           21.224490  \n",
       "7      5.897959            4.510204  \n",
       "8    212.326531           74.938776  \n",
       "9    339.612245           71.081633  \n",
       "10   465.326531           89.367347  \n",
       "11     0.183673            0.795918  \n",
       "12    57.326531           23.795918  \n",
       "13   130.612245            9.795918  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = df_reg[\"最高気温(x)\"]\n",
    "y = df_reg[\"アイスティーの注文数(y)\"]\n",
    "x_mean = x.mean()\n",
    "y_mean = y.mean()\n",
    "\n",
    "df_reg[\"x - x_m\"] = x - x_mean\n",
    "df_reg[\"y - y_m\"] = y - y_mean\n",
    "df_reg[\"(x - x_m)^2\"] = df_reg[\"x - x_m\"] ** 2\n",
    "df_reg[\"(y - y_m)^2\"] = df_reg[\"y - y_m\"] ** 2\n",
    "df_reg[\"(x - x_m)(y - y_m)\"] = df_reg[\"x - x_m\"] * df_reg[\"y - y_m\"]\n",
    "df_reg\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.7378854625550666"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = df_reg[\"(x - x_m)(y - y_m)\"].sum() / df_reg[\"(x - x_m)^2\"].sum()\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-36.361233480176224"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b = y_mean - x_mean * a\n",
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "collapsed": false,
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x1126f6438>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nAJiM8AUAwGSELwAAJiN8AQAwGeELAIDJorxer9fqJgAAiCRc+QIAYDLCFwAAkxG+AACYjPAFAMBk\nhC8AACYjfAEAMFmTU43sxu12a8aMGdqxY4eOHDmi22+/XRdffLEk6bXXXtPSpUu1bNkyi7u0L6P1\nO//883XPPfeoqqpKHo9HDz74oE4//XSrW7Udo7U75ZRTVFBQIIfDoTPOOEP33XefoqN5T2vE4/Ho\nnnvu0datWxUVFaXZs2fL6XQqPz9fUVFR6t69uwoKCli/4zBaP4/Hozlz5sjhcCguLk4PPPCA0tPT\nrW7VlozWLysrS5I12RFy4fuPf/xD7dq100MPPaQDBw7o6quv1sUXX6wvvvhCL7/8svjacuOM1q9v\n37668sorddlll+nDDz/Uli1bCF8DRmvXq1cvjR8/XoMGDdKUKVO0evVqDR061OpWbWnVqlWSpBdf\nfFFFRUV69NFH5fV6NWnSJOXm5mrWrFlasWKFhg8fbnGn9mS0ftXV1Zo5c6Z69uypF198UYsWLdL0\n6dMt7tSejNbvqaeesiw7Qu4t5qWXXqqJEydKkrxerxwOhyoqKjR//nzNmDHD4u7sz2j91q9frz17\n9mjMmDF67bXXlJOTY3GX9mS0dj179tSBAwfk9XpVW1urmJiQez9rmmHDhmnOnDmSpJ07dyo5OVmb\nNm1q+H3Ly8vT2rVrrWzR1ozWb/78+erZs6eko1d2TqfTyhZtzWj9rMyOkAvfhIQEJSYmqqamRhMm\nTNDEiRN19913a/r06UpISLC6Pdv76fpNmjRJO3bsUHJyshYvXqyOHTtq0aJFVrdpS0Zrd2yrecSI\nEdq3b59yc3OtbtPWYmJiNG3aNM2ZM0dXXnmlvF6voqKiJB1d3+rqaos7tLefrl+HDh0kSevXr9fS\npUs1ZswYaxu0uR+v3xVXXGFtdnhD0M6dO73XXHON96WXXvJu2LDBe9lll3l/8YtfeK+77jpvdna2\nd+7cuVa3aGs/Xj+v1+u96KKLvPv37/d6vV7vpk2bvDfffLOV7dnaT9eub9++3pKSEq/X6/UuXbrU\ne++991rZXsjYu3evd/Dgwd7evXs31N5++23v7NmzLewqdBxbv9raWu/rr7/uveKKK7zff/+91W2F\njL1793rPOecc75AhQyzLjpDbIysvL9fYsWM1a9Ys9evXT5L0+uuvS5K2b9+uyZMn6+6777ayRVsz\nWr8LL7xQ7777rq6++mqtW7dO3bp1s7hLezJau5SUFCUmJkqSOnTooPXr11vZoq397W9/0549e3Tr\nrbeqTZs2ioqK0tlnn62ioiLl5uaqsLBQffv2tbpN2zJav7feekvLly/XkiVL1K5dO6tbtLWfrl96\nerr+9a9/KT4+3pLsCLnBCnPnztUbb7yhzMzMhtqiRYt8FnD58uUWdmhvRus3b9483XPPPTp06JAS\nExP1yCOPKCUlxcIu7clo7SZOnKiHH35YMTExio2N1Zw5c9SpUycLu7SvgwcPavr06SovL1ddXZ3G\njRunrl27aubMmXK73crMzNTcuXPlcDisbtWWjNZvxowZ6tixo5KTkyVJffr00YQJEyzu1J6M1m/Y\nsGGSZEl2hFz4AgAQ6kLuhisAAEId4QsAgMkIXwAATEb4AgBgMsIXAACTEb4AAJiM8AUAwGSELwAA\nJvs/0OEHbmCtJRQAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1126f6470>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "y_hat = a * x + b\n",
    "plt.plot(x, y_hat)\n",
    "plt.scatter(x, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/knt/.matplotlib/matplotlibrc'"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import matplotlib as mpl\n",
    "mpl\n",
    "mpl.matplotlib_fname()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1128547b8>"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\niBTy/wMGkZ+IeCP6lAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x112854d30>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lmplot(\"最高気温(x)\", \"アイスティーの注文数(y)\", data=df_reg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>最高気温(x)</th>\n",
       "      <th>アイスティーの注文数(y)</th>\n",
       "      <th>day</th>\n",
       "      <th>week</th>\n",
       "      <th>x - x_m</th>\n",
       "      <th>y - y_m</th>\n",
       "      <th>(x - x_m)^2</th>\n",
       "      <th>(y - y_m)^2</th>\n",
       "      <th>(x - x_m)(y - y_m)</th>\n",
       "      <th>y_h</th>\n",
       "      <th>y_h - y_h_m</th>\n",
       "      <th>(y_h - y_h_m)^2</th>\n",
       "      <th>(y - y_m)(y_h - y_h_m)</th>\n",
       "      <th>(y - y_h_m)^2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>29</td>\n",
       "      <td>77</td>\n",
       "      <td>22</td>\n",
       "      <td>月</td>\n",
       "      <td>-0.142857</td>\n",
       "      <td>4.428571</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>19.612245</td>\n",
       "      <td>-0.632653</td>\n",
       "      <td>72.037445</td>\n",
       "      <td>-0.533984</td>\n",
       "      <td>0.285139</td>\n",
       "      <td>-2.364785</td>\n",
       "      <td>24.626953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>28</td>\n",
       "      <td>62</td>\n",
       "      <td>23</td>\n",
       "      <td>火</td>\n",
       "      <td>-1.142857</td>\n",
       "      <td>-10.571429</td>\n",
       "      <td>1.306122</td>\n",
       "      <td>111.755102</td>\n",
       "      <td>12.081633</td>\n",
       "      <td>68.299559</td>\n",
       "      <td>-4.271869</td>\n",
       "      <td>18.248866</td>\n",
       "      <td>45.159759</td>\n",
       "      <td>39.684450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>34</td>\n",
       "      <td>93</td>\n",
       "      <td>24</td>\n",
       "      <td>水</td>\n",
       "      <td>4.857143</td>\n",
       "      <td>20.428571</td>\n",
       "      <td>23.591837</td>\n",
       "      <td>417.326531</td>\n",
       "      <td>99.224490</td>\n",
       "      <td>90.726872</td>\n",
       "      <td>18.155444</td>\n",
       "      <td>329.620135</td>\n",
       "      <td>370.889778</td>\n",
       "      <td>5.167110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>31</td>\n",
       "      <td>84</td>\n",
       "      <td>25</td>\n",
       "      <td>木</td>\n",
       "      <td>1.857143</td>\n",
       "      <td>11.428571</td>\n",
       "      <td>3.448980</td>\n",
       "      <td>130.612245</td>\n",
       "      <td>21.224490</td>\n",
       "      <td>79.513216</td>\n",
       "      <td>6.941787</td>\n",
       "      <td>48.188411</td>\n",
       "      <td>79.334712</td>\n",
       "      <td>20.131232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>25</td>\n",
       "      <td>59</td>\n",
       "      <td>26</td>\n",
       "      <td>金</td>\n",
       "      <td>-4.142857</td>\n",
       "      <td>-13.571429</td>\n",
       "      <td>17.163265</td>\n",
       "      <td>184.183673</td>\n",
       "      <td>56.224490</td>\n",
       "      <td>57.085903</td>\n",
       "      <td>-15.485525</td>\n",
       "      <td>239.801500</td>\n",
       "      <td>210.160703</td>\n",
       "      <td>3.663767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>29</td>\n",
       "      <td>64</td>\n",
       "      <td>27</td>\n",
       "      <td>土</td>\n",
       "      <td>-0.142857</td>\n",
       "      <td>-8.571429</td>\n",
       "      <td>0.020408</td>\n",
       "      <td>73.469388</td>\n",
       "      <td>1.224490</td>\n",
       "      <td>72.037445</td>\n",
       "      <td>-0.533984</td>\n",
       "      <td>0.285139</td>\n",
       "      <td>4.577003</td>\n",
       "      <td>64.600521</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>32</td>\n",
       "      <td>80</td>\n",
       "      <td>28</td>\n",
       "      <td>日</td>\n",
       "      <td>2.857143</td>\n",
       "      <td>7.428571</td>\n",
       "      <td>8.163265</td>\n",
       "      <td>55.183673</td>\n",
       "      <td>21.224490</td>\n",
       "      <td>83.251101</td>\n",
       "      <td>10.679673</td>\n",
       "      <td>114.055410</td>\n",
       "      <td>79.334712</td>\n",
       "      <td>10.569660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>31</td>\n",
       "      <td>75</td>\n",
       "      <td>29</td>\n",
       "      <td>月</td>\n",
       "      <td>1.857143</td>\n",
       "      <td>2.428571</td>\n",
       "      <td>3.448980</td>\n",
       "      <td>5.897959</td>\n",
       "      <td>4.510204</td>\n",
       "      <td>79.513216</td>\n",
       "      <td>6.941787</td>\n",
       "      <td>48.188411</td>\n",
       "      <td>16.858626</td>\n",
       "      <td>20.369117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>24</td>\n",
       "      <td>58</td>\n",
       "      <td>30</td>\n",
       "      <td>火</td>\n",
       "      <td>-5.142857</td>\n",
       "      <td>-14.571429</td>\n",
       "      <td>26.448980</td>\n",
       "      <td>212.326531</td>\n",
       "      <td>74.938776</td>\n",
       "      <td>53.348018</td>\n",
       "      <td>-19.223411</td>\n",
       "      <td>369.539529</td>\n",
       "      <td>280.112560</td>\n",
       "      <td>21.640940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>33</td>\n",
       "      <td>91</td>\n",
       "      <td>31</td>\n",
       "      <td>水</td>\n",
       "      <td>3.857143</td>\n",
       "      <td>18.428571</td>\n",
       "      <td>14.877551</td>\n",
       "      <td>339.612245</td>\n",
       "      <td>71.081633</td>\n",
       "      <td>86.988987</td>\n",
       "      <td>14.417558</td>\n",
       "      <td>207.865985</td>\n",
       "      <td>265.695001</td>\n",
       "      <td>16.088227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>25</td>\n",
       "      <td>51</td>\n",
       "      <td>1</td>\n",
       "      <td>木</td>\n",
       "      <td>-4.142857</td>\n",
       "      <td>-21.571429</td>\n",
       "      <td>17.163265</td>\n",
       "      <td>465.326531</td>\n",
       "      <td>89.367347</td>\n",
       "      <td>57.085903</td>\n",
       "      <td>-15.485525</td>\n",
       "      <td>239.801500</td>\n",
       "      <td>334.044907</td>\n",
       "      <td>37.038216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>31</td>\n",
       "      <td>73</td>\n",
       "      <td>2</td>\n",
       "      <td>金</td>\n",
       "      <td>1.857143</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>3.448980</td>\n",
       "      <td>0.183673</td>\n",
       "      <td>0.795918</td>\n",
       "      <td>79.513216</td>\n",
       "      <td>6.941787</td>\n",
       "      <td>48.188411</td>\n",
       "      <td>2.975052</td>\n",
       "      <td>42.421981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>26</td>\n",
       "      <td>65</td>\n",
       "      <td>3</td>\n",
       "      <td>土</td>\n",
       "      <td>-3.142857</td>\n",
       "      <td>-7.571429</td>\n",
       "      <td>9.877551</td>\n",
       "      <td>57.326531</td>\n",
       "      <td>23.795918</td>\n",
       "      <td>60.823789</td>\n",
       "      <td>-11.747640</td>\n",
       "      <td>138.007046</td>\n",
       "      <td>88.946417</td>\n",
       "      <td>17.440742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>30</td>\n",
       "      <td>84</td>\n",
       "      <td>4</td>\n",
       "      <td>日</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>11.428571</td>\n",
       "      <td>0.734694</td>\n",
       "      <td>130.612245</td>\n",
       "      <td>9.795918</td>\n",
       "      <td>75.775330</td>\n",
       "      <td>3.203902</td>\n",
       "      <td>10.264987</td>\n",
       "      <td>36.616021</td>\n",
       "      <td>67.645190</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    最高気温(x)  アイスティーの注文数(y)  day week   x - x_m    y - y_m  (x - x_m)^2  \\\n",
       "0        29             77   22    月 -0.142857   4.428571     0.020408   \n",
       "1        28             62   23    火 -1.142857 -10.571429     1.306122   \n",
       "2        34             93   24    水  4.857143  20.428571    23.591837   \n",
       "3        31             84   25    木  1.857143  11.428571     3.448980   \n",
       "4        25             59   26    金 -4.142857 -13.571429    17.163265   \n",
       "5        29             64   27    土 -0.142857  -8.571429     0.020408   \n",
       "6        32             80   28    日  2.857143   7.428571     8.163265   \n",
       "7        31             75   29    月  1.857143   2.428571     3.448980   \n",
       "8        24             58   30    火 -5.142857 -14.571429    26.448980   \n",
       "9        33             91   31    水  3.857143  18.428571    14.877551   \n",
       "10       25             51    1    木 -4.142857 -21.571429    17.163265   \n",
       "11       31             73    2    金  1.857143   0.428571     3.448980   \n",
       "12       26             65    3    土 -3.142857  -7.571429     9.877551   \n",
       "13       30             84    4    日  0.857143  11.428571     0.734694   \n",
       "\n",
       "    (y - y_m)^2  (x - x_m)(y - y_m)        y_h  y_h - y_h_m  (y_h - y_h_m)^2  \\\n",
       "0     19.612245           -0.632653  72.037445    -0.533984         0.285139   \n",
       "1    111.755102           12.081633  68.299559    -4.271869        18.248866   \n",
       "2    417.326531           99.224490  90.726872    18.155444       329.620135   \n",
       "3    130.612245           21.224490  79.513216     6.941787        48.188411   \n",
       "4    184.183673           56.224490  57.085903   -15.485525       239.801500   \n",
       "5     73.469388            1.224490  72.037445    -0.533984         0.285139   \n",
       "6     55.183673           21.224490  83.251101    10.679673       114.055410   \n",
       "7      5.897959            4.510204  79.513216     6.941787        48.188411   \n",
       "8    212.326531           74.938776  53.348018   -19.223411       369.539529   \n",
       "9    339.612245           71.081633  86.988987    14.417558       207.865985   \n",
       "10   465.326531           89.367347  57.085903   -15.485525       239.801500   \n",
       "11     0.183673            0.795918  79.513216     6.941787        48.188411   \n",
       "12    57.326531           23.795918  60.823789   -11.747640       138.007046   \n",
       "13   130.612245            9.795918  75.775330     3.203902        10.264987   \n",
       "\n",
       "    (y - y_m)(y_h - y_h_m)  (y - y_h_m)^2  \n",
       "0                -2.364785      24.626953  \n",
       "1                45.159759      39.684450  \n",
       "2               370.889778       5.167110  \n",
       "3                79.334712      20.131232  \n",
       "4               210.160703       3.663767  \n",
       "5                 4.577003      64.600521  \n",
       "6                79.334712      10.569660  \n",
       "7                16.858626      20.369117  \n",
       "8               280.112560      21.640940  \n",
       "9               265.695001      16.088227  \n",
       "10              334.044907      37.038216  \n",
       "11                2.975052      42.421981  \n",
       "12               88.946417      17.440742  \n",
       "13               36.616021      67.645190  "
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_hat_mean = y_hat.mean()\n",
    "df_reg[\"y_h\"] = y_hat\n",
    "df_reg[\"y_h - y_h_m\"] = y_hat - y_hat_mean\n",
    "df_reg[\"(y_h - y_h_m)^2\"] = df_reg[\"y_h - y_h_m\"] ** 2\n",
    "df_reg[\"(y - y_m)(y_h - y_h_m)\"] = df_reg[\"y - y_m\"] * df_reg[\"y_h - y_h_m\"]\n",
    "df_reg[\"(y - y_h_m)^2\"] = (y - y_hat) ** 2\n",
    "\n",
    "df_reg\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1812.3404657016995"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "S_y_yh = df_reg[\"(y - y_m)(y_h - y_h_m)\"].sum()\n",
    "S_y_yh"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2203.4285714285716"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "S_y_y = df_reg[\"(y - y_m)^2\"].sum()\n",
    "S_y_y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.90692297805088973"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "R = S_y_yh / np.sqrt(S_y_y * S_y_yh)\n",
    "R"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.82250928811669466"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "R ** 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8225092881166943"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a * df_reg[\"(x - x_m)(y - y_m)\"].sum() / S_y_y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.7088243515840764"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.sqrt(df_reg[\"(y - y_h_m)^2\"].sum() / (df_reg.shape[0] - 2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>shop_name</th>\n",
       "      <th>お店の面積</th>\n",
       "      <th>最寄り駅からの距離</th>\n",
       "      <th>1ヶ月の売上額</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>夢の丘本店</td>\n",
       "      <td>10</td>\n",
       "      <td>80</td>\n",
       "      <td>469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>寺井駅ビル店</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>366</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>曽根店</td>\n",
       "      <td>8</td>\n",
       "      <td>200</td>\n",
       "      <td>371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>橋本通り店</td>\n",
       "      <td>5</td>\n",
       "      <td>200</td>\n",
       "      <td>208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>桔梗町店</td>\n",
       "      <td>7</td>\n",
       "      <td>300</td>\n",
       "      <td>246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>郵便局前店</td>\n",
       "      <td>8</td>\n",
       "      <td>230</td>\n",
       "      <td>297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>水道町駅前店</td>\n",
       "      <td>7</td>\n",
       "      <td>40</td>\n",
       "      <td>363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>六条駅ビル店</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>436</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>若葉川沿い店</td>\n",
       "      <td>6</td>\n",
       "      <td>330</td>\n",
       "      <td>198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>美里店</td>\n",
       "      <td>9</td>\n",
       "      <td>180</td>\n",
       "      <td>364</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  shop_name  お店の面積  最寄り駅からの距離  1ヶ月の売上額\n",
       "0     夢の丘本店     10         80      469\n",
       "1    寺井駅ビル店      8          0      366\n",
       "2       曽根店      8        200      371\n",
       "3     橋本通り店      5        200      208\n",
       "4      桔梗町店      7        300      246\n",
       "5     郵便局前店      8        230      297\n",
       "6    水道町駅前店      7         40      363\n",
       "7    六条駅ビル店      9          0      436\n",
       "8    若葉川沿い店      6        330      198\n",
       "9       美里店      9        180      364"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# （重）回帰分析の（偏）回帰係数シート\n",
    "data = \"\"\"\tお店の面積\t最寄り駅からの距離\t1ヶ月の売上額\n",
    "夢の丘本店\t10\t80\t469\n",
    "寺井駅ビル店\t8\t0\t366\n",
    "曽根店\t8\t200\t371\n",
    "橋本通り店\t5\t200\t208\n",
    "桔梗町店\t7\t300\t246\n",
    "郵便局前店\t8\t230\t297\n",
    "水道町駅前店\t7\t40\t363\n",
    "六条駅ビル店\t9\t0\t436\n",
    "若葉川沿い店\t6\t330\t198\n",
    "美里店\t9\t180\t364\n",
    "\"\"\"\n",
    "df_mul_reg = pd.read_csv(io.StringIO(data), sep=\"\\t\")\n",
    "columns = df_mul_reg.columns.tolist()\n",
    "columns[0] = \"shop_name\"\n",
    "df_mul_reg.columns = columns\n",
    "df_mul_reg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>week</th>\n",
       "      <th>水曜or土曜or日曜</th>\n",
       "      <th>最高気温</th>\n",
       "      <th>ノルンスペシャルの販売状況</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5日</td>\n",
       "      <td>（月）</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6日</td>\n",
       "      <td>（火）</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7日</td>\n",
       "      <td>（水）</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8日</td>\n",
       "      <td>（木）</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9日</td>\n",
       "      <td>（金）</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>10日</td>\n",
       "      <td>（土）</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>11日</td>\n",
       "      <td>（日）</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12日</td>\n",
       "      <td>（月）</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>13日</td>\n",
       "      <td>（火）</td>\n",
       "      <td>0</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>14日</td>\n",
       "      <td>（水）</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>15日</td>\n",
       "      <td>（木）</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>16日</td>\n",
       "      <td>（金）</td>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>17日</td>\n",
       "      <td>（土）</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>18日</td>\n",
       "      <td>（日）</td>\n",
       "      <td>1</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>19日</td>\n",
       "      <td>（月）</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>20日</td>\n",
       "      <td>（火）</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>21日</td>\n",
       "      <td>（水）</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>22日</td>\n",
       "      <td>（木）</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>23日</td>\n",
       "      <td>（金）</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>24日</td>\n",
       "      <td>（土）</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>25日</td>\n",
       "      <td>（日）</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    day week  水曜or土曜or日曜  最高気温  ノルンスペシャルの販売状況\n",
       "0    5日  （月）           0    28              1\n",
       "1    6日  （火）           0    24              0\n",
       "2    7日  （水）           1    26              0\n",
       "3    8日  （木）           0    24              0\n",
       "4    9日  （金）           0    23              0\n",
       "5   10日  （土）           1    28              1\n",
       "6   11日  （日）           1    24              0\n",
       "7   12日  （月）           0    26              1\n",
       "8   13日  （火）           0    25              0\n",
       "9   14日  （水）           1    28              1\n",
       "10  15日  （木）           0    21              0\n",
       "11  16日  （金）           0    22              0\n",
       "12  17日  （土）           1    27              1\n",
       "13  18日  （日）           1    26              1\n",
       "14  19日  （月）           0    26              0\n",
       "15  20日  （火）           0    21              0\n",
       "16  21日  （水）           1    21              1\n",
       "17  22日  （木）           0    27              0\n",
       "18  23日  （金）           0    23              0\n",
       "19  24日  （土）           1    22              0\n",
       "20  25日  （日）           1    24              1"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# ロジスティック回帰シート\n",
    "data  = \"\"\"\t\t水曜or土曜or日曜\t最高気温\tノルンスペシャルの販売状況\n",
    "5日\t（月）\t0\t28\t1\n",
    "6日\t（火）\t0\t24\t0\n",
    "7日\t（水）\t1\t26\t0\n",
    "8日\t（木）\t0\t24\t0\n",
    "9日\t（金）\t0\t23\t0\n",
    "10日\t（土）\t1\t28\t1\n",
    "11日\t（日）\t1\t24\t0\n",
    "12日\t（月）\t0\t26\t1\n",
    "13日\t（火）\t0\t25\t0\n",
    "14日\t（水）\t1\t28\t1\n",
    "15日\t（木）\t0\t21\t0\n",
    "16日\t（金）\t0\t22\t0\n",
    "17日\t（土）\t1\t27\t1\n",
    "18日\t（日）\t1\t26\t1\n",
    "19日\t（月）\t0\t26\t0\n",
    "20日\t（火）\t0\t21\t0\n",
    "21日\t（水）\t1\t21\t1\n",
    "22日\t（木）\t0\t27\t0\n",
    "23日\t（金）\t0\t23\t0\n",
    "24日\t（土）\t1\t22\t0\n",
    "25日\t（日）\t1\t24\t1\n",
    "\"\"\"\n",
    "df_logistic = pd.read_csv(io.StringIO(data), sep=\"\\t\")\n",
    "columns = df_logistic.columns.tolist()\n",
    "columns[:2] = [\"day\", \"week\"]\n",
    "df_logistic.columns = columns\n",
    "df_logistic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
